version: '3.8'

services:
  # Frontend Development
  frontend-dev:
    build:
      context: ./nz-market-frontend
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    volumes:
      - ./nz-market-frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:8080/api
    networks:
      - app-network

  # Backend Development
  backend-dev:
    build:
      context: ./nz-market-backend
      dockerfile: Dockerfile.dev
    ports:
      - "8080:8080"
    volumes:
      - ./nz-market-backend:/app
      - maven-cache:/root/.m2
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - DB_URL=jdbc:postgresql://postgres:5432/market
      - DB_USER=market
      - DB_PASSWORD=market
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - S3_ENDPOINT=http://minio:9000
      - S3_BUCKET=market-uploads
      - S3_ACCESS_KEY=minio
      - S3_SECRET_KEY=minio_secret
      - JWT_SECRET=dev-secret-key
    depends_on:
      - postgres
      - redis
      - minio
    networks:
      - app-network

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=market
      - POSTGRES_USER=market
      - POSTGRES_PASSWORD=market
      - TZ=Pacific/Auckland
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./nz-market-backend/src/main/resources/db/migration:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - app-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - app-network

  # MinIO Object Storage
  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      - MINIO_ROOT_USER=minio
      - MINIO_ROOT_PASSWORD=minio_secret
    volumes:
      - minio_data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - app-network

volumes:
  postgres_data:
  redis_data:
  minio_data:
  maven-cache:

networks:
  app-network:
    driver: bridge
